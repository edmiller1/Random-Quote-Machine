{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Random-Quote-Machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State\n  let [quote, setQuote] = useState({});\n  const colors = [\"#16a085\", \"#27ae60\", \"#2c3e50\", \"#f39c12\", \"#e74c3c\", \"#9b59b6\", \"#FB6964\", \"#342224\", \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\n  useEffect(() => {\n    fetchQuote();\n    console.log(quote);\n  }, [setQuote]);\n\n  const fetchQuote = () => {\n    const response = fetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=1\");\n    let data = response.json();\n\n    for (let key in data.quotes) {\n      quote = {\n        text: data.quotes[key].text,\n        author: data.quotes[key].author\n      };\n    }\n\n    setQuote(quote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: \"twitter.com/intent/tweet\",\n        target: \"_blank\",\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BrqoDQIOzdPe1AwPN+/+lsQA01U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Random-Quote-Machine/src/App.js"],"names":["useState","useEffect","App","quote","setQuote","colors","fetchQuote","console","log","response","fetch","data","json","key","quotes","text","author"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMK,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,CAAf;AAeAJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GAHQ,EAGN,CAACC,QAAD,CAHM,CAAT;;AAKA,QAAME,UAAU,GAAG,MAAM;AACvB,UAAMG,QAAQ,GAAGC,KAAK,CACpB,0DADoB,CAAtB;AAGA,QAAIC,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAX;;AACA,SAAK,IAAIC,GAAT,IAAgBF,IAAI,CAACG,MAArB,EAA6B;AAC3BX,MAAAA,KAAK,GAAG;AACNY,QAAAA,IAAI,EAAEJ,IAAI,CAACG,MAAL,CAAYD,GAAZ,EAAiBE,IADjB;AAENC,QAAAA,MAAM,EAAEL,IAAI,CAACG,MAAL,CAAYD,GAAZ,EAAiBG;AAFnB,OAAR;AAID;;AACDZ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,IAAI,EAAC,0BAAzB;AAAoD,QAAA,MAAM,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlDQD,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  //State\n  let [quote, setQuote] = useState({});\n\n  const colors = [\n    \"#16a085\",\n    \"#27ae60\",\n    \"#2c3e50\",\n    \"#f39c12\",\n    \"#e74c3c\",\n    \"#9b59b6\",\n    \"#FB6964\",\n    \"#342224\",\n    \"#472E32\",\n    \"#BDBB99\",\n    \"#77B1A9\",\n    \"#73A857\",\n  ];\n\n  useEffect(() => {\n    fetchQuote();\n    console.log(quote);\n  }, [setQuote]);\n\n  const fetchQuote = () => {\n    const response = fetch(\n      \"https://goquotes-api.herokuapp.com/api/v1/random?count=1\"\n    );\n    let data = response.json();\n    for (let key in data.quotes) {\n      quote = {\n        text: data.quotes[key].text,\n        author: data.quotes[key].author,\n      };\n    }\n    setQuote(quote);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"quote-box\">\n        <h1 id=\"text\"></h1>\n        <span id=\"author\"></span>\n        <button id=\"new-quote\">New Quote</button>\n        <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" target=\"_blank\">\n          hi\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}