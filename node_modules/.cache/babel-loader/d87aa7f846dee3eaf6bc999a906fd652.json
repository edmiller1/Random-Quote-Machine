{"ast":null,"code":"var _jsxFileName = \"/Users/edwardmiller/Documents/GitHub/Random-Quote-Machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State\n  const [quotes, setQuotes] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(\"\");\n  const [randomAuthor, setRandomAuthor] = useState(\"\");\n  const colors = [\"#16a085\", \"#27ae60\", \"#2c3e50\", \"#f39c12\", \"#e74c3c\", \"#9b59b6\", \"#FB6964\", \"#342224\", \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\n  useEffect(() => {\n    fetchQuotes();\n    console.log(quotes);\n  }, [setQuotes]);\n  useEffect(() => {\n    getRandomQuote();\n  }, [quotes]);\n\n  const fetchQuotes = async () => {\n    await fetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=100\").then(response => response.json()).then(data => setQuotes(data.quotes));\n  };\n\n  const getRandomQuote = () => {\n    let randomIndex = Math.floor(Math.random() * quotes.length);\n    setRandomQuote(quotes[randomIndex].text);\n    setRandomAuthor(quotes[randomIndex].author);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"text\",\n          children: randomQuote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-author\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"author\",\n          children: [\"- \", randomAuthor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: () => getRandomQuote(),\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: \"twitter.com/intent/tweet\",\n        target: \"_blank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A+ECORd5ihtlKSrlcoPpCNRab1c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/Random-Quote-Machine/src/App.js"],"names":["useState","useEffect","App","quotes","setQuotes","randomQuote","setRandomQuote","randomAuthor","setRandomAuthor","colors","fetchQuotes","console","log","getRandomQuote","fetch","then","response","json","data","randomIndex","Math","floor","random","length","text","author"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMS,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,CAAf;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD,GAHQ,EAGN,CAACC,SAAD,CAHM,CAAT;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACV,MAAD,CAFM,CAAT;;AAIA,QAAMO,WAAW,GAAG,YAAY;AAC9B,UAAMI,KAAK,CAAC,4DAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADhB,EAEHF,IAFG,CAEGG,IAAD,IAAUd,SAAS,CAACc,IAAI,CAACf,MAAN,CAFrB,CAAN;AAGD,GAJD;;AAMA,QAAMU,cAAc,GAAG,MAAM;AAC3B,QAAIM,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnB,MAAM,CAACoB,MAAlC,CAAlB;AACAjB,IAAAA,cAAc,CAACH,MAAM,CAACgB,WAAD,CAAN,CAAoBK,IAArB,CAAd;AACAhB,IAAAA,eAAe,CAACL,MAAM,CAACgB,WAAD,CAAN,CAAoBM,MAArB,CAAf;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,+BACE;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA,oBAAiBpB;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA,+BACE;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA,2BAAqBE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,MAAMM,cAAc,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,IAAI,EAAC,0BAAzB;AAAoD,QAAA,MAAM,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1DQX,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  //State\n  const [quotes, setQuotes] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(\"\");\n  const [randomAuthor, setRandomAuthor] = useState(\"\");\n\n  const colors = [\n    \"#16a085\",\n    \"#27ae60\",\n    \"#2c3e50\",\n    \"#f39c12\",\n    \"#e74c3c\",\n    \"#9b59b6\",\n    \"#FB6964\",\n    \"#342224\",\n    \"#472E32\",\n    \"#BDBB99\",\n    \"#77B1A9\",\n    \"#73A857\",\n  ];\n\n  useEffect(() => {\n    fetchQuotes();\n    console.log(quotes);\n  }, [setQuotes]);\n\n  useEffect(() => {\n    getRandomQuote();\n  }, [quotes]);\n\n  const fetchQuotes = async () => {\n    await fetch(\"https://goquotes-api.herokuapp.com/api/v1/random?count=100\")\n      .then((response) => response.json())\n      .then((data) => setQuotes(data.quotes));\n  };\n\n  const getRandomQuote = () => {\n    let randomIndex = Math.floor(Math.random() * quotes.length);\n    setRandomQuote(quotes[randomIndex].text);\n    setRandomAuthor(quotes[randomIndex].author);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"quote-box\">\n        <div id=\"quote-text\">\n          <span id=\"text\">{randomQuote}</span>\n        </div>\n        <div id=\"quote-author\">\n          <span id=\"author\">- {randomAuthor}</span>\n        </div>\n        <button id=\"new-quote\" onClick={() => getRandomQuote()}>\n          New Quote\n        </button>\n        <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" target=\"_blank\"></a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}